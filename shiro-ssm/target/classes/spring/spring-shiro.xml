<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 定义本次要使用的Realm -->
	<bean id="memberRealm" class="cn.mldn.shiro.realm.MemberRealm" />
	
	<!-- 缓存管理 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:shiro/ehcache.xml"/>
	</bean>
	
	<!-- Java UUID sessionId生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	<!-- 会话策略 -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
	</bean>
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="name" value="mldn-session-id"/>	<!-- 设置的sessionId的name -->
		<property name="httpOnly" value="true"/>	<!-- 只支持http -->
		<property name="maxAge" value="-1"/> 	<!-- 浏览器关闭后cookie失效 -->
	</bean>
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="globalSessionTimeout" value="300000"/>
		<property name="deleteInvalidSessions" value="true"/>
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>	
	</bean>
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="100000"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>
	
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="name" value="mldnjava"/>
		<property name="httpOnly" value="true"/>	<!-- 只支持http -->
		<property name="maxAge" value="864000"/> 	<!-- 记住密码10天 -->
	</bean>
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie"/>
	</bean>
	
	
	<!-- Shiro中的所有验证的配置处理都应该交给SecurityManager，由于不是WEB与Shiro整合，所以所有的配置项必须由用户自己处理 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 当前使用的Realm为之前定义好的MemberRealm -->
		<property name="realm" ref="memberRealm"/> 
		<property name="cacheManager" ref="cacheManager"/>
		<property name="sessionManager" ref="sessionManager"/>
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>
	
	<!-- 内置的自定义的登录控制过滤器 -->
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="mid"/>
		<property name="passwordParam" value="password"/>
		<property name="rememberMeParam" value="rememberme"/>
		<property name="loginUrl" value="/login.jsp"/>
		<property name="failureKeyAttribute" value="error"/>
	</bean>
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login.jsp"></property>
	</bean>
	
	<!-- Shiro之中最为重要的概念就是过滤的操作概念，本次主要是进行Shiro的过滤器的相关配置 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 明确表示此处要使用的SecurityManager类型的对象引用关系 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 程序出现了错误之后的跳转配置路径 -->
		<property name="loginUrl" value="/login.jsp"/>
		<!-- 如果授权出现了错误则跳转到此路径之中 -->
		<property name="unauthorizedUrl" value="/unauth.jsp"/>
		<!-- 描述的是登录成功后的跳转页 -->
		<property name="successUrl" value="/pages/welcome.jsp"/>
		<!-- 如果现在要修改内置的过滤器操作，就必须配置好新的过滤规则 -->
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
				<entry key="logout" value-ref="logoutFilter"/>
			</map>
		</property>
		<!-- 配置所有的访问跳转处理路径 -->
		<property name="filterChainDefinitions">
			<value>
				/logout.jsp=logout
				/login.jsp=authc
				/pages/welcome.jsp=user
			</value>
		</property> 
	</bean>
	
</beans>
